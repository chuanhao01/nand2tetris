class Math{
    static Array bit_mask;

    function void init(){
        var int i, t;
        let bit_mask = Array.new(16);
        let i = 0;
        let t = 1;
        while(i < 16){
            let bit_mask[i] = t;
            let t = t + t; // t*2
            let i = i + 1;
        }

        return;
    }

    function int abs(int x){
        if (x < 0){
            return -x;
        }
        return x;
    }
    function int min(int x, int y){
        if (x < y){
            return x;
        }
        return y;
    }
    function int max(int x, int y){
        if (x < y){
            return y;
        }
        return x;
    }

    function int multiply(int x, int y){
        var int sum, shifted_x;
        var int i;

        let sum = 0;
        let shifted_x = x;
        let i = 0;
        while (i < 16){
            // Check if the i'th bit of y is not 0
            if ((bit_mask[i] & y) > 0){
                let sum = sum + shifted_x;
            }
            let shifted_x = shifted_x + shifted_x;
            let i = i + 1;
        }
        return sum;
    }
    /**
    function int divide(int x, int y){
        var int q, s;
        if (y > x){
            return 0;
        }
        let q = Math.divide(x, y + y);
        let s = q * y;
        if ((x - (s + s)) < y){
            return q + q;
        } else {
            return q + q + 1;
        }
    }
    */
    function int divide(int x, int y) {
        var int q,result;
        var boolean pos;

        let pos = ((x < 0) = (y < 0));

        let x = Math.abs(x);
        let y = Math.abs(y);

        if(y > x){
            return 0;
        }

        let q = Math.divide(x,y + y);

        if((x - (2 * q * y)) < y){
            let result = q + q;
        }else{
            let result = q + q + 1;
        }

        if(pos){
            return result;
        }else{
            return -result;
        }

    }
}
