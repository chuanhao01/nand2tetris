<class>
<keyword>
class
</keyword>
<identifier>
Main
</identifier>
<symbol>
{
</symbol>
<classVarDec>
<keyword>
static
</keyword>
<keyword>
int
</keyword>
<identifier>
a
</identifier>
<symbol>
;
</symbol>
</classVarDec>
<classVarDec>
<keyword>
static
</keyword>
<identifier>
anotherClass
</identifier>
<identifier>
aa
</identifier>
<symbol>
;
</symbol>
</classVarDec>
<classVarDec>
<keyword>
field
</keyword>
<keyword>
int
</keyword>
<identifier>
b
</identifier>
<symbol>
;
</symbol>
</classVarDec>
<classVarDec>
<keyword>
field
</keyword>
<identifier>
wowClass
</identifier>
<identifier>
bb
</identifier>
<symbol>
;
</symbol>
</classVarDec>
<subroutineDec>
<keyword>
function
</keyword>
<keyword>
int
</keyword>
<identifier>
wow_routine
</identifier>
<symbol>
(
</symbol>
<parameterList>
<keyword>
int
</keyword>
<identifier>
c
</identifier>
<symbol>
,
</symbol>
<identifier>
wowClass
</identifier>
<identifier>
d
</identifier>
</parameterList>
<symbol>
)
</symbol>
<subroutineBody>
<symbol>
{
</symbol>
<varDec>
<keyword>
var
</keyword>
<keyword>
int
</keyword>
<identifier>
e
</identifier>
<symbol>
,
</symbol>
<identifier>
ee
</identifier>
<symbol>
,
</symbol>
<identifier>
efg
</identifier>
<symbol>
;
</symbol>
</varDec>
<varDec>
<keyword>
var
</keyword>
<identifier>
fclass
</identifier>
<identifier>
f
</identifier>
<symbol>
,
</symbol>
<identifier>
ff
</identifier>
<symbol>
,
</symbol>
<identifier>
fgh
</identifier>
<symbol>
;
</symbol>
</varDec>
<statements>
<letStatement>
<keyword>
let
</keyword>
<identifier>
e
</identifier>
<symbol>
=
</symbol>
<expression>
<term>
<identifier>
ee
</identifier>
</term>
<symbol>
+
</symbol>
<term>
<identifier>
efg
</identifier>
</term>
<symbol>
=
</symbol>
<term>
<identifier>
efg
</identifier>
</term>
</expression>
<symbol>
;
</symbol>
</letStatement>
</statements>
<symbol>
}
</symbol>
</subroutineBody>
</subroutineDec>
<symbol>
}
</symbol>
</class>